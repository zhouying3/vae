#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Sep 27 23:11:26 2017

@author: zhouying
"""

import tensorflow as tf
#import numpy as np
from tensorflow.examples.tutorials.mnist import input_data

mnist = input_data.read_data_sets('/home/zhouying/mytensorflow/MNIST_data',one_hot=True)

batchsize = 100
x = tf.placeholder(tf.float32,shape=[None,784],name='x')
y_ = tf.placeholder(tf.float32,shape=[None,10],name='y_')


W = tf.Variable(tf.zeros([784,10]))
b = tf.Variable(tf.zeros([10]),name='input_bias')
y = tf.nn.softmax(tf.matmul(x,W)+b)

tf.summary.histogram('output',y)

cross_entropy = -tf.reduce_sum(y_*tf.log(y))

tf.summary.scalar('loss_fuction',cross_entropy)

train_step = tf.train.GradientDescentOptimizer(0.01).minimize(cross_entropy)

correct_prediction = tf.equal(tf.argmax(y,1),tf.argmax(y_,1))

accuracy = tf.reduce_mean(tf.cast(correct_prediction,'float32'))

tf.summary.scalar('accuracy',accuracy)
merged_summmary_op = tf.summary.merge_all()


sess = tf.InteractiveSession()
init = tf.global_variables_initializer()

sess.run(init)
if tf.gfile.Exists('/home/zhouying/log'):
    tf.gfile.DeleteRecursively('/home/zhouying/log')
summary_writer = tf.summary.FileWriter('/home/zhouying/log',sess.graph)

for i in range(1000):
    batch = mnist.train.next_batch(batchsize)
    sess.run(train_step,feed_dict={x:batch[0],y_:batch[1]})
    summary_str = sess.run(merged_summmary_op,feed_dict={x:batch[0],y_:batch[1]})
    summary_writer.add_summary(summary_str,i)

summary_writer.close()
sess.close()